{"version":3,"sources":["components/shared/Spinner.js","components/shared/Layout/Header.js","components/shared/Layout/Sidebar.js","components/shared/Layout/Layout.js","components/shared/Form/InputType.js","services/API.js","components/shared/modal/Modal.js","pages/HomePage.js","redux/features/auth/authActions.js","redux/features/auth/authSlice.js","redux/store.js","components/shared/Form/Form.js","services/authService.js","pages/auth/Login.js","pages/auth/Register.js","components/Routes/ProtectedRoute.js","components/Routes/PublicRoute.js","pages/Dashboard/Donar.js","pages/Dashboard/Hospitals.js","pages/Dashboard/OrganisationPage.js","pages/Dashboard/Consumer.js","pages/Donation.js","pages/Dashboard/Analytics.js","pages/Admin/DonarList.js","pages/Admin/HospitalList.js","pages/Admin/OrgList.js","pages/Admin/AdminHome.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","React","createElement","className","Header","user","useSelector","state","auth","navigate","useNavigate","location","useLocation","Fragment","BiDonateBlood","color","BiUserCircle","name","hospitalName","organisationName","role","pathname","Link","to","onClick","handleLogout","localStorage","clear","alert","Sidebar","concat","Layout","_ref","children","InputType","labelText","labelFor","inputType","value","onChange","htmlFor","type","API","axios","create","baseURL","process","interceptors","request","use","req","getItem","headers","Authorization","Modal","inventoryType","setInventoryType","useState","bloodGroup","setBloodGroup","quantity","setQuantity","email","setEmail","id","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","defaultChecked","e","target","defaultValue","async","data","post","organisation","_id","success","window","reload","error","response","message","console","log","HomePage","loading","setData","useEffect","get","inventory","getBloodRecords","data-bs-toggle","data-bs-target","style","cursor","scope","map","record","key","moment","createdAt","format","userLogin","createAsyncThunk","_ref2","password","rejectWithValue","setItem","token","replace","userRegister","_ref3","_ref4","phone","address","website","getCurrentUser","_ref5","res","initialState","authSlice","createSlice","reducers","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","_ref6","store","configureStore","reducer","Form","formType","submitBtn","formTitle","setPassword","setRole","setName","setOrganisationName","setHospitalName","setWebsite","setAddress","setPhone","onSubmit","handleLogin","preventDefault","dispatch","handleRegister","Login","src","alt","Register","ProtectedRoute","useDispatch","getUser","Navigate","PublicRoute","Donar","donars","getDonars","Hospitals","hospitals","OrganisationPage","organisations","getOrg","Consumer","filters","hospital","Donation","donar","Analytics","inventoryData","setInventoryData","colors","bloodGroupData","getBloodGroupData","i","width","backgroundColor","totalIn","totalOut","availabeBlood","DonarList","donarData","prompt","delete","handelDelete","HospitalList","hospitalData","OrgList","orgData","AdminHome","App","ToastContainer","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.dd6b1172.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { BiDonateBlood, BiUserCircle } from \"react-icons/bi\";\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst Header = () => {\n  const { user } = useSelector((state) => state.auth);\n  const navigate = useNavigate();\n  const location = useLocation();\n  // logout handler\n  const handleLogout = () => {\n    localStorage.clear();\n    alert(\"Logout Successfully\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"container-fluid \">\n          <div className=\"navbar-brand h1 \">\n            <BiDonateBlood color=\"red\" /> Blood Bank App\n          </div>\n          <ul className=\"navbar-nav flex-row\">\n            <li className=\"nav-item mx-3\">\n              <p className=\"nav-link\">\n                <BiUserCircle /> Welcome{\" \"}\n                {user?.name || user?.hospitalName || user?.organisationName}\n                &nbsp;\n                <span className=\"badge bg-secondary\">{user?.role}</span>\n              </p>\n            </li>\n            {location.pathname === \"/\" ||\n            location.pathname === \"/donar\" ||\n            location.pathname === \"/hospital\" ? (\n              <li className=\"nav-item mx-3\">\n                <Link to=\"/analytics\" className=\"nav-link\">\n                  Analytics\n                </Link>\n              </li>\n            ) : (\n              <li className=\"nav-item mx-3\">\n                <Link to=\"/\" className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n            )}\n            <li className=\"nav-item mx-3\">\n              <button className=\"btn btn-danger\" onClick={handleLogout}>\n                Logout\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n// import { userMenu } from \"./Menus/userMenu\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"../../../styles/Layout.css\";\n\nconst Sidebar = () => {\n  //GET USER STATE\n  const { user } = useSelector((state) => state.auth);\n\n  const location = useLocation();\n\n  return (\n    <div>\n      <div className=\"sidebar\">\n        <div className=\"menu\">\n          {user?.role === \"organisation\" && (\n            <>\n              <div\n                className={`menu-item ${location.pathname === \"/\" && \"active\"}`}\n              >\n                <i className=\"fa-solid fa-warehouse\"></i>\n                <Link to=\"/\">Inventory</Link>\n              </div>\n              <div\n                className={`menu-item ${\n                  location.pathname === \"/donar\" && \"active\"\n                }`}\n              >\n                <i className=\"fa-solid fa-hand-holding-medical\"></i>\n                <Link to=\"/donar\">Donar</Link>\n              </div>\n              <div\n                className={`menu-item ${\n                  location.pathname === \"/hospital\" && \"active\"\n                }`}\n              >\n                <i className=\"fa-solid fa-hospital\"></i>\n                <Link to=\"/hospital\">Hospital</Link>\n              </div>\n            </>\n          )}\n          {user?.role === \"admin\" && (\n            <>\n              <div\n                className={`menu-item ${\n                  location.pathname === \"/donar-list\" && \"active\"\n                }`}\n              >\n                <i className=\"fa-solid fa-warehouse\"></i>\n                <Link to=\"/donar-list\">Donar List</Link>\n              </div>\n              <div\n                className={`menu-item ${\n                  location.pathname === \"/hospital-list\" && \"active\"\n                }`}\n              >\n                <i className=\"fa-solid fa-hand-holding-medical\"></i>\n                <Link to=\"/hospital-list\">Hospital List</Link>\n              </div>\n              <div\n                className={`menu-item ${\n                  location.pathname === \"/org-list\" && \"active\"\n                }`}\n              >\n                <i className=\"fa-solid fa-hospital\"></i>\n                <Link to=\"/org-list\">Organisation List</Link>\n              </div>\n            </>\n          )}\n          {(user?.role === \"donar\" || user?.role === \"hospital\") && (\n            <div\n              className={`menu-item ${\n                location.pathname === \"/orgnaisation\" && \"active\"\n              }`}\n            >\n              <i className=\"fa-sharp fa-solid fa-building-ngo\"></i>\n              <Link to=\"/orgnaisation\">Organisation</Link>\n            </div>\n          )}\n          {user?.role === \"hospital\" && (\n            <div\n              className={`menu-item ${\n                location.pathname === \"/consumer\" && \"active\"\n              }`}\n            >\n              <i className=\"fa-sharp fa-solid fa-building-ngo\"></i>\n              <Link to=\"/consumer\">Consumer</Link>\n            </div>\n          )}\n          {user?.role === \"donar\" && (\n            <div\n              className={`menu-item ${\n                location.pathname === \"/donation\" && \"active\"\n              }`}\n            >\n              <i className=\"fa-sharp fa-solid fa-building-ngo\"></i>\n              <Link to=\"/donation\">Donation</Link>\n            </div>\n          )}\n\n          {/* {userMenu.map((menu) => {\n            const isActive = location.pathname === menu.path;\n            return (\n              <div\n                className={`menu-item ${isActive && \"active\"}`}\n                key={menu.name}\n              >\n                <i className={menu.icon}></i>\n                <Link to={menu.path}>{menu.name}</Link>\n              </div>\n            );\n          })} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div className=\"header\">\n        <Header />\n      </div>\n      <div className=\"row g-0\">\n        <div className=\"col-md-3\">\n          <Sidebar />\n        </div>\n        <div className=\"col-md-9\">{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nconst InputType = ({\n  labelText,\n  labelFor,\n  inputType,\n  value,\n  onChange,\n  name,\n}) => {\n  return (\n    <>\n      <div className=\"mb-1\">\n        <label htmlFor={labelFor} className=\"form-label\">\n          {labelText}\n        </label>\n        <input\n          type={inputType}\n          className=\"form-control\"\n          name={name}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default InputType;\n","import axios from \"axios\";\n\nconst API = axios.create({ baseURL: process.env.REACT_APP_BASEURL });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"token\")) {\n    req.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")} `;\n  }\n  return req;\n});\n\nexport default API;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport InputType from \"./../Form/InputType\";\nimport API from \"./../../../services/API\";\n\nconst Modal = () => {\n  const [inventoryType, setInventoryType] = useState(\"in\");\n  const [bloodGroup, setBloodGroup] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const { user } = useSelector((state) => state.auth);\n  // handle modal data\n  const handleModalSubmit = async () => {\n    try {\n      if (!bloodGroup || !quantity) {\n        return alert(\"Please Provide All Fields\");\n      }\n      const { data } = await API.post(\"/inventory/create-inventory\", {\n        email,\n        organisation: user?._id,\n        inventoryType,\n        bloodGroup,\n        quantity,\n      });\n      if (data?.success) {\n        alert(\"New Record Created\");\n        window.location.reload();\n      }\n    } catch (error) {\n      alert(error.response.data.message);\n      console.log(error);\n      window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      {/* Modal */}\n      <div\n        className=\"modal fade\"\n        id=\"staticBackdrop\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabIndex={-1}\n        aria-labelledby=\"staticBackdropLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">\n                Manage Blood Record\n              </h1>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              />\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"d-flex mb-3\">\n                Blood Type: &nbsp;\n                <div className=\"form-check ms-3\">\n                  <input\n                    type=\"radio\"\n                    name=\"inRadio\"\n                    defaultChecked\n                    value={\"in\"}\n                    onChange={(e) => setInventoryType(e.target.value)}\n                    className=\"form-check-input\"\n                  />\n                  <label htmlFor=\"in\" className=\"form-check-label\">\n                    IN\n                  </label>\n                </div>\n                <div className=\"form-check ms-3\">\n                  <input\n                    type=\"radio\"\n                    name=\"inRadio\"\n                    value={\"out\"}\n                    onChange={(e) => setInventoryType(e.target.value)}\n                    className=\"form-check-input\"\n                  />\n                  <label htmlFor=\"out\" className=\"form-check-label\">\n                    OUT\n                  </label>\n                </div>\n              </div>\n              <select\n                className=\"form-select\"\n                aria-label=\"Default select example\"\n                onChange={(e) => setBloodGroup(e.target.value)}\n              >\n                <option defaultValue={\"Open this select menu\"}>\n                  Open this select menu\n                </option>\n                <option value={\"O+\"}>O+</option>\n                <option value={\"O-\"}>O-</option>\n                <option value={\"AB+\"}>AB+</option>\n                <option value={\"AB-\"}>AB-</option>\n                <option value={\"A+\"}>A+</option>\n                <option value={\"A-\"}>A-</option>\n                <option value={\"B+\"}>B+</option>\n                <option value={\"B-\"}>B-</option>\n              </select>\n              <InputType\n                labelText={\"Donar Email\"}\n                labelFor={\"donarEmail\"}\n                inputType={\"email\"}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <InputType\n                labelText={\"Quanitity (ML)\"}\n                labelFor={\"quantity\"}\n                inputType={\"Number\"}\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleModalSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Spinner from \"../components/shared/Spinner\";\nimport Layout from \"../components/shared/Layout/Layout\";\nimport Modal from \"../components/shared/modal/Modal\";\nimport API from \"../services/API\";\nimport moment from \"moment\";\n\nconst HomePage = () => {\n  const { loading, error, user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  const navigate = useNavigate();\n\n  //get function\n  const getBloodRecords = async () => {\n    try {\n      const { data } = await API.get(\"/inventory/get-inventory\");\n      if (data?.success) {\n        setData(data?.inventory);\n        // console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getBloodRecords();\n  }, []);\n  return (\n    <Layout>\n      {user?.role === \"admin\" && navigate(\"/admin\")}\n      {error && <span>{alert(error)}</span>}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <div className=\"container\">\n            <h4\n              className=\"ms-4\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#staticBackdrop\"\n              style={{ cursor: \"pointer\" }}\n            >\n              <i className=\"fa-solid fa-plus text-success py-4\"></i>\n              Add Inventory\n            </h4>\n            <table className=\"table \">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Blood Group</th>\n                  <th scope=\"col\">Inventory Type</th>\n                  <th scope=\"col\">Quantity</th>\n                  <th scope=\"col\">Donar Email</th>\n                  <th scope=\"col\">TIme & Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((record) => (\n                  <tr key={record._id}>\n                    <td>{record.bloodGroup}</td>\n                    <td>{record.inventoryType}</td>\n                    <td>{record.quantity} (ML)</td>\n                    <td>{record.email}</td>\n                    <td>\n                      {moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            <Modal />\n          </div>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../../services/API\";\nimport { toast } from \"react-toastify\";\n\nexport const userLogin = createAsyncThunk(\n  \"auth/login\",\n  async ({ role, email, password }, { rejectWithValue }) => {\n    try {\n      const { data } = await API.post(\"/auth/login\", { role, email, password });\n      //store token\n      if (data.success) {\n        alert(data.message);\n        localStorage.setItem(\"token\", data.token);\n        window.location.replace(\"/\");\n      }\n      return data;\n    } catch (error) {\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n\n//register\nexport const userRegister = createAsyncThunk(\n  \"auth/register\",\n  async (\n    {\n      name,\n      role,\n      email,\n      password,\n      phone,\n      organisationName,\n      address,\n      hospitalName,\n      website,\n    },\n    { rejectWithValue }\n  ) => {\n    try {\n      const { data } = await API.post(\"/auth/register\", {\n        name,\n        role,\n        email,\n        password,\n        phone,\n        organisationName,\n        address,\n        hospitalName,\n        website,\n      });\n      if (data?.success) {\n        alert(\"User Registerd Successfully\");\n        window.location.replace(\"/login\");\n        // toast.success(\"User Registerd Successfully\");\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n\n//current user\nexport const getCurrentUser = createAsyncThunk(\n  \"auth/getCurrentUser\",\n  async ({ rejectWithValue }) => {\n    try {\n      const res = await API.get(\"/auth/current-user\");\n      if (res.data) {\n        return res?.data;\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message);\n      } else {\n        return rejectWithValue(error.message);\n      }\n    }\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCurrentUser, userLogin, userRegister } from \"./authActions\";\n\nconst token = localStorage.getItem(\"token\")\n  ? localStorage.getItem(\"token\")\n  : null;\n\nconst initialState = {\n  loading: false,\n  user: null,\n  token,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // login user\n    builder.addCase(userLogin.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(userLogin.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.user = payload.user;\n      state.token = payload.token;\n    });\n    builder.addCase(userLogin.rejected, (state, { payload }) => {\n      state.loading = false;\n      state.error = payload;\n    });\n    // REGISTER user\n    builder.addCase(userRegister.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(userRegister.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.user = payload.user;\n    });\n    builder.addCase(userRegister.rejected, (state, { payload }) => {\n      state.loading = false;\n      state.error = payload;\n    });\n    // CURRENT user\n    builder.addCase(getCurrentUser.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(getCurrentUser.fulfilled, (state, { payload }) => {\n      state.loading = false;\n      state.user = payload.user;\n    });\n    builder.addCase(getCurrentUser.rejected, (state, { payload }) => {\n      state.loading = false;\n      state.error = payload;\n    });\n  },\n});\n\nexport default authSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./features/auth/authSlice\";\n\nconst store = configureStore({\n  reducer: {\n    auth: authSlice.reducer,\n  },\n});\n\nexport default store;\n","import React, { useState } from \"react\";\nimport InputType from \"./InputType\";\nimport { Link } from \"react-router-dom\";\nimport { handleLogin, handleRegister } from \"../../../services/authService\";\n\nconst Form = ({ formType, submitBtn, formTitle }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"donar\");\n  const [name, setName] = useState(\"\");\n  const [organisationName, setOrganisationName] = useState(\"\");\n  const [hospitalName, setHospitalName] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  return (\n    <div>\n       <h2 className=\"bb-heading\">Aryan's Blood Bank</h2>\n\n      <form\n        onSubmit={(e) => {\n          if (formType === \"login\")\n            return handleLogin(e, email, password, role);\n          else if (formType === \"register\")\n            return handleRegister(\n              e,\n              name,\n              role,\n              email,\n              password,\n              phone,\n              organisationName,\n              address,\n              hospitalName,\n              website\n            );\n        }}\n      >\n\n        <h1 className=\"text-center\">{formTitle}</h1>\n        <hr />\n        <div className=\"d-flex mb-3\">\n          <div className=\"form-check\">\n            <input\n              type=\"radio\"\n              className=\"form-check-input\"\n              name=\"role\"\n              id=\"donarRadio\"\n              value={\"donar\"}\n              onChange={(e) => setRole(e.target.value)}\n              defaultChecked\n            />\n            <label htmlFor=\"adminRadio\" className=\"form-check-label\">\n              Donar\n            </label>\n          </div>\n          <div className=\"form-check ms-2\">\n            <input\n              type=\"radio\"\n              className=\"form-check-input\"\n              name=\"role\"\n              id=\"adminRadio\"\n              value={\"admin\"}\n              onChange={(e) => setRole(e.target.value)}\n            />\n            <label htmlFor=\"adminRadio\" className=\"form-check-label\">\n              Admin\n            </label>\n          </div>\n          <div className=\"form-check ms-2\">\n            <input\n              type=\"radio\"\n              className=\"form-check-input\"\n              name=\"role\"\n              id=\"hospitalRadio\"\n              value={\"hospital\"}\n              onChange={(e) => setRole(e.target.value)}\n            />\n            <label htmlFor=\"hospitalRadio\" className=\"form-check-label\">\n              Hospital\n            </label>\n          </div>\n          <div className=\"form-check ms-2\">\n            <input\n              type=\"radio\"\n              className=\"form-check-input\"\n              name=\"role\"\n              id=\"organisationRadio\"\n              value={\"organisation\"}\n              onChange={(e) => setRole(e.target.value)}\n            />\n            <label htmlFor=\"organisationRadio\" className=\"form-check-label\">\n              Organisation\n            </label>\n          </div>\n        </div>\n        {/* switch statement */}\n        {(() => {\n          //eslint-disable-next-line\n          switch (true) {\n            case formType === \"login\": {\n              return (\n                <>\n                  <InputType\n                    labelText={\"email\"}\n                    labelFor={\"forEmail\"}\n                    inputType={\"email\"}\n                    name={\"email\"}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <InputType\n                    labelText={\"Password\"}\n                    labelFor={\"forPassword\"}\n                    inputType={\"password\"}\n                    name={\"password\"}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </>\n              );\n            }\n            case formType === \"register\": {\n              return (\n                <>\n                  {(role === \"admin\" || role === \"donar\") && (\n                    <InputType\n                      labelText={\"Name\"}\n                      labelFor={\"forName\"}\n                      inputType={\"text\"}\n                      name={\"name\"}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  )}\n                  {role === \"organisation\" && (\n                    <InputType\n                      labelText={\"Organisation Name\"}\n                      labelFor={\"fororganisationName\"}\n                      inputType={\"text\"}\n                      name={\"organisationName\"}\n                      value={organisationName}\n                      onChange={(e) => setOrganisationName(e.target.value)}\n                    />\n                  )}\n                  {role === \"hospital\" && (\n                    <InputType\n                      labelText={\"Hospital Name\"}\n                      labelFor={\"forHospitalName\"}\n                      inputType={\"text\"}\n                      name={\"hospitalName\"}\n                      value={hospitalName}\n                      onChange={(e) => setHospitalName(e.target.value)}\n                    />\n                  )}\n\n                  <InputType\n                    labelText={\"email\"}\n                    labelFor={\"forEmail\"}\n                    inputType={\"email\"}\n                    name={\"email\"}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <InputType\n                    labelText={\"Password\"}\n                    labelFor={\"forPassword\"}\n                    inputType={\"password\"}\n                    name={\"password\"}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <InputType\n                    labelText={\"website\"}\n                    labelFor={\"forWebsite\"}\n                    inputType={\"text\"}\n                    name={\"website\"}\n                    value={website}\n                    onChange={(e) => setWebsite(e.target.value)}\n                  />\n                  <InputType\n                    labelText={\"Address\"}\n                    labelFor={\"forAddress\"}\n                    inputType={\"text\"}\n                    name={\"address\"}\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                  <InputType\n                    labelText={\"Phone\"}\n                    labelFor={\"forPhone\"}\n                    inputType={\"text\"}\n                    name={\"phone\"}\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                  />\n                </>\n              );\n            }\n          }\n        })()}\n\n        <div className=\"d-flex flex-row justify-content-between\">\n          {formType === \"login\" ? (\n            <p>\n              Not registerd yet? Register\n              <Link to=\"/register\"> Here</Link>\n            </p>\n          ) : (\n            <p>\n              User already exists!\n              <Link to=\"/login\"> Login</Link>\n            </p>\n          )}\n          <button className=\"btn btn-primary\" type=\"submit\">\n            {submitBtn}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { userLogin, userRegister } from \"../redux/features/auth/authActions\";\nimport store from \"../redux/store\";\n\nexport const handleLogin = (e, email, password, role) => {\n  e.preventDefault();\n  try {\n    if (!role || !email || !password) {\n      return alert(\"Please Privde All Feilds\");\n    }\n    store.dispatch(userLogin({ email, password, role }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleRegister = (\n  e,\n  name,\n  role,\n  email,\n  password,\n  phone,\n  organisationName,\n  address,\n  hospitalName,\n  website\n) => {\n  e.preventDefault();\n  try {\n    store.dispatch(\n      userRegister({\n        name,\n        role,\n        email,\n        password,\n        phone,\n        organisationName,\n        address,\n        hospitalName,\n        website,\n      })\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport Form from \"../../components/shared/Form/Form\";\nimport { useSelector } from \"react-redux\";\nimport Spinner from \"./../../components/shared/Spinner\";\n\nconst Login = () => {\n  const { loading, error } = useSelector((state) => state.auth);\n  return (\n    <>\n      {error && <span>{alert(error)}</span>}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"row g-0\">\n          <div className=\"col-md-7 form-banner\">\n            <img src=\"./assets/images/profile.jpg\" alt=\"loginImage\" />\n          </div>\n          <div className=\"col-md-5 form-container\">\n    \n            <Form\n              formTitle={\"Login Page\"}\n              submitBtn={\"Login\"}\n              formType={\"login\"}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Form from \"../../components/shared/Form/Form\";\nimport { useSelector } from \"react-redux\";\nimport Spinner from \"../../components/shared/Spinner\";\n\nconst Register = () => {\n  const { loading, error } = useSelector((state) => state.auth);\n  return (\n    <>\n      {error && <span>{alert(error)}</span>}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"row g-0\">\n          <div className=\"col-md-8 form-banner \">\n            <img src=\"./assets/images/banner2.jpg\" alt=\"registerImage\" />\n          </div>\n          <div className=\"col-md-4 form-container\">\n            <Form\n              formTitle={\"Register\"}\n              submitBtn={\"Register\"}\n              formType={\"register\"}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../services/API\";\nimport { getCurrentUser } from \"../../redux/features/auth/authActions\";\nimport { Navigate } from \"react-router-dom\";\nconst ProtectedRoute = ({ children }) => {\n  const dispatch = useDispatch();\n\n  //get user current\n  const getUser = async () => {\n    try {\n      const { data } = await API.get(\"/auth/current-user\");\n      if (data?.success) {\n        dispatch(getCurrentUser(data));\n      }\n    } catch (error) {\n      localStorage.clear();\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  });\n\n  if (localStorage.getItem(\"token\")) {\n    return children;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst PublicRoute = ({ children }) => {\n  if (localStorage.getItem(\"token\")) {\n    return <Navigate to=\"/\" />;\n  } else {\n    return children;\n  }\n};\n\nexport default PublicRoute;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport API from \"../../services/API\";\nimport moment from \"moment\";\n\nconst Donar = () => {\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.get(\"/inventory/get-donars\");\n      //   console.log(data);\n      if (data?.success) {\n        setData(data?.donars);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.name || record.organisationName + \" (ORG)\"}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default Donar;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport API from \"../../services/API\";\nimport moment from \"moment\";\n\nconst Hospitals = () => {\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.get(\"/inventory/get-hospitals\");\n      //   console.log(data);\n      if (data?.success) {\n        setData(data?.hospitals);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.hospitalName}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{record.address}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default Hospitals;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport API from \"../../services/API\";\n\nconst OrganisationPage = () => {\n  // get current user\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  //find org records\n  const getOrg = async () => {\n    try {\n      if (user?.role === \"donar\") {\n        const { data } = await API.get(\"/inventory/get-orgnaisation\");\n        //   console.log(data);\n        if (data?.success) {\n          setData(data?.organisations);\n        }\n      }\n      if (user?.role === \"hospital\") {\n        const { data } = await API.get(\n          \"/inventory/get-orgnaisation-for-hospital\"\n        );\n        //   console.log(data);\n        if (data?.success) {\n          setData(data?.organisations);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getOrg();\n  }, [user]);\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.organisationName}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{record.address}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default OrganisationPage;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport API from \"../../services/API\";\nimport { useSelector } from \"react-redux\";\n\nconst Consumer = () => {\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\n        filters: {\n          inventoryType: \"out\",\n          hospital: user?._id,\n        },\n      });\n      if (data?.success) {\n        setData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"container mt-4\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory TYpe</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity}</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Consumer;\n","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/shared/Layout/Layout\";\nimport API from \"../services/API\";\nimport { useSelector } from \"react-redux\";\n\nconst Donation = () => {\n  const { user } = useSelector((state) => state.auth);\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\n        filters: {\n          inventoryType: \"in\",\n          donar: user?._id,\n        },\n      });\n      if (data?.success) {\n        setData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"container mt-4\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory TYpe</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity}</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Donation;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../components/shared/Layout/Header\";\nimport API from \"./../../services/API\";\nimport moment from \"moment\";\n\nconst Analytics = () => {\n  const [data, setData] = useState([]);\n  const [inventoryData, setInventoryData] = useState([]);\n  const colors = [\n    \"#884A39\",\n    \"#C38154\",\n    \"#FFC26F\",\n    \"#4F709C\",\n    \"#4942E4\",\n    \"#0079FF\",\n    \"#FF0060\",\n    \"#22A699\",\n  ];\n  //GET BLOOD GROUP DATA\n  const getBloodGroupData = async () => {\n    try {\n      const { data } = await API.get(\"/analytics/bloodGroups-data\");\n      if (data?.success) {\n        setData(data?.bloodGroupData);\n        // console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //lifrecycle method\n  useEffect(() => {\n    getBloodGroupData();\n  }, []);\n\n  //get function\n  const getBloodRecords = async () => {\n    try {\n      const { data } = await API.get(\"/inventory/get-recent-inventory\");\n      if (data?.success) {\n        setInventoryData(data?.inventory);\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getBloodRecords();\n  }, []);\n  return (\n    <>\n      <Header />\n      <div className=\"d-flex flex-row flex-wrap\">\n        {data?.map((record, i) => (\n          <div\n            className=\"card m-2 p-1\"\n            key={i}\n            style={{ width: \"18rem\", backgroundColor: `${colors[i]}` }}\n          >\n            <div className=\"card-body\">\n              <h1 className=\"card-title bg-light text-dark text-center mb-3\">\n                {record.bloodGroup}\n              </h1>\n              <p className=\"card-text\">\n                Total In : <b>{record.totalIn}</b> (ML)\n              </p>\n              <p className=\"card-text\">\n                Total Out : <b>{record.totalOut}</b> (ML)\n              </p>\n            </div>\n            <div className=\"card-footer text-light bg-dark text-center\">\n              Total Available : <b>{record.availabeBlood}</b> (ML)\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"container my-3\">\n        <h1 className=\"my-3\">Recent Blood Transactions</h1>\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <th scope=\"col\">Blood Group</th>\n              <th scope=\"col\">Inventory Type</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Donar Email</th>\n              <th scope=\"col\">TIme & Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {inventoryData?.map((record) => (\n              <tr key={record._id}>\n                <td>{record.bloodGroup}</td>\n                <td>{record.inventoryType}</td>\n                <td>{record.quantity} (ML)</td>\n                <td>{record.email}</td>\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Analytics;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport API from \"../../services/API\";\n\nconst DonarList = () => {\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.get(\"/admin/donar-list\");\n      //   console.log(data);\n      if (data?.success) {\n        setData(data?.donarData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  //DELETE FUNCTION\n  const handelDelete = async (id) => {\n    try {\n      let answer = window.prompt(\n        \"Are You SUre Want To Delete This Donar\",\n        \"Sure\"\n      );\n      if (!answer) return;\n      const { data } = await API.delete(`/admin/delete-donar/${id}`);\n      alert(data?.message);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.name || record.organisationName + \" (ORG)\"}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => handelDelete(record._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default DonarList;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport API from \"../../services/API\";\n\nconst HospitalList = () => {\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.get(\"/admin/hospital-list\");\n      console.log(data);\n      if (data?.success) {\n        setData(data?.hospitalData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  //DELETE FUNCTION\n  const handelDelete = async (id) => {\n    try {\n      let answer = window.prompt(\n        \"Are You SUre Want To Delete This Hospital\",\n        \"Sure\"\n      );\n      if (!answer) return;\n      const { data } = await API.delete(`/admin/delete-donar/${id}`);\n      alert(data?.message);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.hospitalName}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => handelDelete(record._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default HospitalList;\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport moment from \"moment\";\nimport API from \"../../services/API\";\n\nconst OrgList = () => {\n  const [data, setData] = useState([]);\n  //find donar records\n  const getDonars = async () => {\n    try {\n      const { data } = await API.get(\"/admin/org-list\");\n      console.log(data);\n      if (data?.success) {\n        setData(data?.orgData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getDonars();\n  }, []);\n\n  //DELETE FUNCTION\n  const handelDelete = async (id) => {\n    try {\n      let answer = window.prompt(\n        \"Are You SUre Want To Delete This Organisation\",\n        \"Sure\"\n      );\n      if (!answer) return;\n      const { data } = await API.delete(`/admin/delete-donar/${id}`);\n      alert(data?.message);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <table className=\"table \">\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((record) => (\n            <tr key={record._id}>\n              <td>{record.organisationName}</td>\n              <td>{record.email}</td>\n              <td>{record.phone}</td>\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => handelDelete(record._id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport default OrgList;\n","import React from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport { useSelector } from \"react-redux\";\n\nconst AdminHome = () => {\n  const { user } = useSelector((state) => state.auth);\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div className=\"d-felx flex-column mt-4\">\n          <h1>\n            Welcome Admin <i className=\"text-success\">{user?.name}</i>\n          </h1>\n          <h3>Manage Blood Bank App </h3>\n          <hr />\n      <p>\n    As an administrator, you have the crucial responsibility of overseeing the blood bank operations to ensure efficient and effective management of blood donations, inventory, and distribution. This system is designed to streamline your tasks and provide you with the tools necessary to manage the blood bank seamlessly.\n</p>\n\n<h2>Dashboard</h2>\n<p>Your dashboard provides a comprehensive overview of the current status and activities within the blood bank. Here, you can quickly access important metrics, including:</p>\n\n<h2>Donor Management</h2>\n<ul>\n    <li>View and update the donor list</li>\n    <li>Track donor history and eligibility status</li>\n    <li>Contact donors for upcoming blood drives and urgent needs</li>\n</ul>\n\n<h2>Hospital Management</h2>\n<p>Ensure seamless coordination with hospitals requiring blood supplies. You can:</p>\n<ul>\n    <li>View and manage the list of affiliated hospitals</li>\n    <li>Approve and process blood requests from hospitals</li>\n    <li>Track blood shipments and deliveries</li>\n</ul>\n\n<h2>Organization Management</h2>\n<p>Collaborate with various organizations to support blood donation campaigns and events. You can:</p>\n<ul>\n    <li>View and manage the list of partner organizations</li>\n    <li>Coordinate with organizations for blood donation drives</li>\n    <li>Maintain records of partnerships and collaborations</li>\n</ul>\n\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AdminHome;\n","import { Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport Login from \"./pages/auth/Login\";\nimport Register from \"./pages/auth/Register\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ProtectedRoute from \"./components/Routes/ProtectedRoute\";\nimport PublicRoute from \"./components/Routes/PublicRoute\";\nimport Donar from \"./pages/Dashboard/Donar\";\nimport Hospitals from \"./pages/Dashboard/Hospitals\";\nimport OrganisationPage from \"./pages/Dashboard/OrganisationPage\";\nimport Consumer from \"./pages/Dashboard/Consumer\";\nimport Donation from \"./pages/Donation\";\nimport Analytics from \"./pages/Dashboard/Analytics\";\nimport DonarList from \"./pages/Admin/DonarList\";\nimport HospitalList from \"./pages/Admin/HospitalList\";\nimport OrgList from \"./pages/Admin/OrgList\";\nimport AdminHome from \"./pages/Admin/AdminHome\";\nimport React from 'react';\nfunction App() {\n  return (\n    <>\n      <ToastContainer />\n      <Routes>\n        <Route\n          path=\"/admin\"\n          element={\n            <ProtectedRoute>\n              <AdminHome />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/donar-list\"\n          element={\n            <ProtectedRoute>\n              <DonarList />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/hospital-list\"\n          element={\n            <ProtectedRoute>\n              <HospitalList />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/org-list\"\n          element={\n            <ProtectedRoute>\n              <OrgList />\n            </ProtectedRoute>\n          }\n        />\n\n        <Route\n          path=\"/hospital\"\n          element={\n            <ProtectedRoute>\n              <Hospitals />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/analytics\"\n          element={\n            <ProtectedRoute>\n              <Analytics />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/consumer\"\n          element={\n            <ProtectedRoute>\n              <Consumer />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/donation\"\n          element={\n            <ProtectedRoute>\n              <Donation />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/orgnaisation\"\n          element={\n            <ProtectedRoute>\n              <OrganisationPage />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/donar\"\n          element={\n            <ProtectedRoute>\n              <Donar />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute>\n              <HomePage />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/login\"\n          element={\n            <PublicRoute>\n              <Login />\n            </PublicRoute>\n          }\n        />\n        <Route\n          path=\"/register\"\n          element={\n            <PublicRoute>\n              <Register />\n            </PublicRoute>\n          }\n        />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}